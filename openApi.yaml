openapi: 3.0.0
info:
  title: GoTravel API
  version: 0.0.1
servers:
  - description: Production Server
    url: https://gotravel-production.up.railway.app/
  - description: Development Server
    url: https://final-project-be-develop.up.railway.app/

tags:
  - name: Airport
    description: Contain every operation about Airport Resource
paths:
  /api/v1/airport:
    get:
      summary: Get all Airport
      operationId: Get all Airport
      description: "Get new Airport data to database"
      tags:
        - Airport
      responses:
        "200":
          $ref: "#/components/responses/GetAirportResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"

    post:
      security:
        - bearerAuth: []
      operationId: createAirport
      summary: Create Data Airport
      description: "Add new Airport data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Airport
      requestBody:
        $ref: "#/components/requestBodies/AirportRequest"
      responses:
        "200":
          $ref: "#/components/responses/PostAirportResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

  /api/v1/airport/{id}:
    put:
      security:
        - bearerAuth: []
      summary: Update Airport By Id
      operationId: UpdateAirport
      description: "Update new Airport data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Airport
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/AirportUpdate"
      responses:
        "200":
          $ref: "#/components/responses/PutAirportResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

    delete:
      security:
        - bearerAuth: []
      summary: Delete Airport By Id
      operationId: DeleteAirport
      description: "Delete new Airport data to database \n\n Allowed roles: superadmin, admin"
      tags:
        - Airport
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DeleteAirportResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"

    get:
      summary: Get Airport By ID
      operationId: Get Airport By Id
      description: "Get new Airport data to database"
      tags:
        - Airport
      parameters:
        - in: path
          name: id
          description: The id of the Post
          required: true
          schema:
            type: number
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/GetCarsById"
        "400":
          $ref: "#/components/responses/ErrorResponse"

  /register:
    post:
      tags:
        - auth
      summary: Register new member
      description: Register new account with member role
      operationId: registerMember
      requestBody:
        $ref: "#/components/requestBodies/MemberRequest"
      responses:
        "200":
          $ref: "#/components/responses/RegisterResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "403":
          $ref: "#/components/responses/UnprocessableRespon"

  /createAdmin:
    post:
      security:
        - bearerAuth: []
      tags:
        - auth
      summary: Register new Admin
      description: Register new account with admin role
      operationId: registerAdmin
      requestBody:
        $ref: "#/components/requestBodies/LoginRequest"
      responses:
        "200":
          $ref: "#/components/responses/AdminResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "400":
          $ref: "#/components/responses/UnprocessableRespon"

  /login:
    post:
      tags:
        - auth
      summary: Login
      description: Login
      operationId: Login
      requestBody:
        $ref: "#/components/requestBodies/AdminRequest"
      responses:
        "200":
          $ref: "#/components/responses/AdminResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/UnprocessableRespon"

  /whoami:
    get:
      security:
        - bearerAuth: []
      tags:
        - auth
      summary: Check Who Am I
      description: whoami
      operationId: whoami
      responses:
        "200":
          $ref: "#/components/responses/WhoAmIRespon"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/UnprocessableRespon"

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    AirportRequest:
      description: Create Airport Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: Bandara Udara Internasional Soekarno–Hatta
              province:
                type: string
                example: Banten
              city:
                type: string
                example: Tangerang
              country:
                type: string
                example: Indonesia
              status:
                type: string
                example: Indonesia
              createAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"
              updateAt:
                type: string
                example: "2022-12-05T16:32:34.011Z"

    AirportUpdate:
      description: Update Airport Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Bandara Udara Internasional Soekarno–Hatta
              province:
                type: string
                example: Banten
              city:
                type: string
                example: Tangerang
              country:
                type: string
                example: Indonesia
              status:
                type: string
                example: Indonesia

    MemberRequest:
      description: Create Member Data Required fields [email, password]
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "member@gmai.com"
              password:
                type: string
                example: "inimember"

    AdminRequest:
      description: Create Admin Data Required fields [email, password]
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "admin@gmai.com"
              password:
                type: string
                example: "iniadmin"

    LoginRequest:
      description: Login [email, password]
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "admin@gmai.com"
              password:
                type: string
                example: "iniadmin"

  responses:
    GetAirportResponse:
      description: Get data Airport success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                type: object
                properties:
                  airports:
                    $ref: "#/components/schemas/AirportGet"
              properties:
              meta:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1

    PostAirportResponse:
      description: create data airport succes
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Create Airport successfully

    PutAirportResponse:
      description: Update data airport success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Update Airport successfully

    DeleteAirportResponse:
      description: Delete data car success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Delete Airport successfully
    
    ErrorResponse:
      description: Error Response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Error
  
    GetCarsById:
      description: Get data airport success with id = id
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: OK
              data:
                $ref: "#/components/schemas/AirportGetByID"
                
    UnauthorizedResponse:
      description: Response when accessing or input data without using admin or superadmin account 
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"

    ForbiddenResponse:
      description: Response when accessing protected endpoint with access but sufficient access
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: FAIL
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "FORBIDDEN"
                  message:
                    type: string
                    example: "you don't have permission"

    RegisterResponse:
      description: Created Member
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "create user successfully"

    AdminResponse:
      description: Created Admin
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "create Admin successfully"

    LoginResponse:
      description: Login
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "login successfully"

    UnprocessableRespon:
      description: Unprocessable Entity, check missing fields from requestBody
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: FAILED
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "failed"
                  message:
                    type: string
                    example: "check missing fields from requestBody"

    WhoAmIRespon:
      description: Get User Login
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: Success
              data:
                type: object
                properties:
                  name:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "check user login"

  schemas:
    AirportGet:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Bandara Udara Internasional Soekarno–Hatta
          province:
            type: string
            example: Banten
          city:
            type: string
            example: Tangerang
          country:
            type: string
            example: Indonesia
          createAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
          updateAt:
            type: string
            example: "2022-12-05T16:32:34.011Z"
    
    AirportGetByID:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Bandara Udara Internasional Soekarno–Hatta
        province:
          type: string
          example: Banten
        city:
          type: string
          example: Tangerang
        country:
          type: string
          example: Indonesia
        createAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"
        updateAt:
          type: string
          example: "2022-12-05T16:32:34.011Z"
    
    AirportPost:
      type: object
      items:
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Bandara Udara Internasional Soekarno–Hatta
          province:
            type: string
            example: Banten
          city:
            type: string
            example: Tangerang
          country:
            type: string
            example: Indonesia
          status:
            type: string
            example: "On"


          
